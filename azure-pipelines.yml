# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master



variables:
  buildConfiguration: 'Release'
  dotNetSdk: '3.x'
  vmImageName: 'windows-latest'

stages:

- stage: 'Build'
  displayName: 'Build the web application'
  jobs:
  
  - job: 'Build'
    displayName: 'Build job'
    pool:
      vmImage: $(vmImageName)
      
      steps:

      - task: UseDotNet@2
        displayName: 'Use .NET SDK $(dotNetSdk)'
        inputs:
          packageType: sdk
          version: '$(dotNetSdk)'
    
      - task: DotNetCoreCLI@2
        displayName: 'Restore project dependencies'
        inputs:
          command: 'restore'
          projects: '**/*.csproj'
    
      - script: dotnet build --configuration $(buildConfiguration)
        displayName: 'dotnet build $(buildConfiguration)'
  
      - task: DotNetCoreCLI@2
        displayName: 'Publish the project - $(buildConfiguration)'
        inputs:
          command: 'publish'
          projects: '**/*.csproj'
          publishWebProjects: false
          arguments: '--no-build --configuration Release --output $(Build.ArtifactStagingDirectory)/$(buildConfiguration)'
          zipAfterPublish: true

      - task: PublishBuildArtifacts@1
        displayName: 'Publish Artifact: drop'
        condition: succeeded()
  
- stage: 'Deploy'
  displayName: 'Deploy the web application'
  dependsOn: Build
  jobs:
  - deployment: Deploy
    pool:
      vmImage: $(vmImageName)
    environment: myc-poc-test-env
    variables:
    - group: test
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: drop
          - task: AzureWebApp@1
            displayName: 'Azure App Service Deploy: website'
            inputs:
              azureSubscription: 'Resource Manager - Tailspin - Space Game'
              appName: '$(WebAppName)'
              package: '$(Pipeline.Workspace)/drop/$(buildConfiguration)/*.zip'
